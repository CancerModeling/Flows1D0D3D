# ----------------------------------
# Copyright (c) 2021 Prashant K. Jha
# ----------------------------------
#
# Distributed under the Boost Software License, Version 1.0. (See accompanying
# file LICENSE_1_0.txt or copy at http://www.boost.org/LICENSE_1_0.txt)

FROM ubuntu:bionic

## build command
## docker build --network=host --no-cache  -t u2004-comp -f Dockerfile-u2004-comp .

## push to hub
## docker tag u2004-comp prashjha/u2004-comp
## docker push prashjha/u2004-comp

# Set metadata
LABEL maintainer="Prashant K. Jha <pjha.sci@gmail.com>"
LABEL description="Ubuntu 20.04 with petsc, libmesh, hpx"

# -----------------------
# apt-get
# -----------------------
RUN apt-get update -y \
&&  apt-get upgrade -y \
&&  DEBIAN_FRONTEND=noninteractive apt-get install -y \
    git less wget curl lzip bzip2 unzip autoconf libtool pkg-config \
    rpm gcovr ruby-coveralls libproj-dev m4 \
    software-properties-common ubuntu-dev-tools \
    cmake make build-essential libssl-dev clang-format-10 clang-tidy \
    openssh-server rsync

RUN apt-get update --fix-missing \
&&  apt-get upgrade -y --force-yes \
&&  DEBIAN_FRONTEND=noninteractive apt-get install -y --force-yes \
    iwyu cppcheck doxygen doxygen-latex graphviz ghostscript \
    libopenmpi-dev openmpi-bin lldb valgrind \
    python3-pip \
&&  python3 -m pip install numpy pyvista pandas 

RUN apt-get update --fix-missing \
&&  apt-get upgrade -y --force-yes \
&&  DEBIAN_FRONTEND=noninteractive apt-get install -y --force-yes \
    gfortran libblas-dev liblapack-dev libmpfr-dev libgmp-dev \
    libhwloc-dev libjemalloc-dev libboost-all-dev libyaml-cpp-dev \
    libvtk7-dev gmsh libflann-dev \
&&  rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/* \
&&  apt-get autoremove -y \
&&  apt-get autoclean -y 

RUN apt-get update --fix-missing \
&&  apt-get upgrade -y --force-yes \
&&  rm -rf /var/cache/apt/archives/* /var/lib/apt/lists/* \
&&  apt-get autoremove -y \
&&  apt-get autoclean -y 

# -----------------------
# PETSc
# -----------------------
ENV PETSC_VERSION 3.13.3

RUN cd /tmp && \
    wget http://ftp.mcs.anl.gov/pub/petsc/release-snapshots/petsc-lite-$PETSC_VERSION.tar.gz && \
    tar xf petsc-lite-$PETSC_VERSION.tar.gz && rm -f petsc-lite-$PETSC_VERSION.tar.gz && \
    cd petsc-$PETSC_VERSION && \
    ./configure \
    --prefix=/usr/lib/petsc-$PETSC_VERSION \
    --with-blas-lib=libblas.a \
    --with-lapack-lib=liblapack.a \
    --download-hypre  \
    --download-scalapack \
    --download-mumps \
    --download-metis \
    --download-parmetis \
    --download-superlu \
    --download-superlu_dist \
    --with-debugging=0 \
    COPTFLAGS='-O3' CXXOPTFLAGS='-O3' FOPTFLAGS='-O3' && \
    make VERBOSE=1 PETSC_DIR=`pwd` -j $(cat /proc/cpuinfo | grep processor | wc -l) all && \
    make PETSC_DIR=`pwd` install && \
    cd /tmp && rm -rf petsc-$PETSC_VERSION

#CFLAGS='-fPIC' CXXFLAGS='-fPIC' FCFLAGS='-fPIC' \

ENV PETSC_DIR /usr/lib/petsc-$PETSC_VERSION
ENV METIS_DIR $PETSC_DIR
ENV SCALAPACK_DIR $PETSC_DIR
ENV PARMETIS_DIR $PETSC_DIR
ENV SUPERLU_DIR $PETSC_DIR
ENV SUPERLU_DIST_DIR $PETSC_DIR
ENV MUMPS_DIR $PETSC_DIR
ENV HYPRE_DIR $PETSC_DIR

# -----------------------
# Libmesh
# -----------------------
ENV LIBMESH_VERSION=1.5.0
ENV LIBMESH_DIR /usr/lib/libmesh-$LIBMESH_VERSION

RUN cd /tmp && \
    wget https://github.com/libMesh/libmesh/archive/refs/tags/v${LIBMESH_VERSION}.tar.gz && \
    mkdir -p libmesh-${LIBMESH_VERSION} && \
    tar -zxf v${LIBMESH_VERSION}.tar.gz -C libmesh-${LIBMESH_VERSION} --strip-components=1 && \
    rm -f v${LIBMESH_VERSION}.tar.gz && \
    cd libmesh-${LIBMESH_VERSION} && \
    mkdir build && \
    cd build && \
    ../configure --with-methods="opt" \
                 --prefix=$LIBMESH_DIR \
                 --with-metis=PETSc && \
    make -j $(cat /proc/cpuinfo | grep processor | wc -l) && \
    make install && \
    cd ../.. && rm -rf libmesh-${LIBMESH_VERSION}

# -----------------------
# HPX
# -----------------------
ENV HPX_MAJOR_VERSION=1
ENV HPX_MINOR_VERSION=3
ENV HPX_PATCH_VERSION=0
ENV HPX_VERSION=$HPX_MAJOR_VERSION.$HPX_MINOR_VERSION.$HPX_PATCH_VERSION

ENV HPX_DIR /usr/lib/hpx-$HPX_VERSION

RUN cd /tmp && \
    wget https://github.com/STEllAR-GROUP/hpx/archive/${HPX_VERSION}.tar.gz && \
    mkdir -p hpx-${HPX_VERSION} && \
    tar -zxf ${HPX_VERSION}.tar.gz -C hpx-${HPX_VERSION} --strip-components=1 && \
    rm -f ${HPX_VERSION}.tar.gz && \
    mkdir -p hpx_build && \
    cd hpx_build && \
    cmake \
    -D CMAKE_BUILD_TYPE:STRING=Release \
    -D CMAKE_INSTALL_PREFIX:STRING=${HPX_DIR} \
    -D CMAKE_CXX_COMPILER=g++ \
    -D CMAKE_C_COMPILER=gcc \
    -D CMAKE_EXPORT_COMPILE_COMMANDS=ON \
    -D HPX_WITH_THREAD_IDLE_RATES=ON \
    -D HPX_WITH_DISABLED_SIGNAL_EXCEPTION_HANDLERS=ON \
    -D HPX_WITH_MALLOC=jemalloc \
    -D HPX_WITH_EXAMPLES=OFF \
    -D HPX_WITH_NETWORKING=OFF \
    ../hpx-${HPX_VERSION} && \
    make -j $(cat /proc/cpuinfo | grep processor | wc -l) VERBOSE=1 && \
    make install && \
    cd .. && rm -rf hpx-$HPX_VERSION && rm -rf hpx_build
